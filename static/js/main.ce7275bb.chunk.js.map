{"version":3,"sources":["context/context-mode.js","context/context-countries.js","utils.js","images/moon.svg","components/Header.js","components/CountryCard.js","components/Countries.js","components/MainView.js","components/CountryPage.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","createContext","ModeContextProvider","props","useState","color","mode","setMode","Provider","value","children","CountriesContext","CountriesProvider","countries","setCountries","addCommas","arr","map","e","index","length","name","HeaderWrapper","styled","header","TitleWrapper","div","MoonDiv","Header","word","useContext","className","onClick","split","w","charAt","toUpperCase","concat","substring","toString","replace","CardWrapper","BannerWrapper","Banner","img","CardBody","theme","Bold","span","CardTitle","InfoDiv","CountryCard","country","flag","population","region","capital","to","pathname","state","src","alt","Intl","NumberFormat","format","Container","Countries","React","memo","byRegion","byName","filtered","filterRegion","filter","c","toLowerCase","includes","hasFiltered","InputWrapper","CountryDiv","InputCountry","input","Select","select","initialValue","MainView","filters","setFilters","class","type","placeholder","onChange","target","disabled","url","Wrapper","Button","button","DescriptionWrapper","Flag","InfoWrapper","InfoRight","List","ul","BordersWrapper","BorderButtonsWrapper","BorderButton","fetchBorder","b","a","fetch","data","json","initialState","CountryPage","useLocation","useEffect","parsedBorders","borders","Promise","all","then","r","nativeName","subRegion","topLevelDomain","currencies","languages","parsedCurrencies","parsedLanguages","GlobalStyle","createGlobalStyle","App","response","fetchData","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce7275bb.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\r\n\r\nexport const ModeContext = createContext();\r\n\r\nexport const ModeContextProvider = (props) => {\r\n  const [mode, setMode] = useState({ color: \"ligth\" });\r\n\r\n  return (\r\n    <ModeContext.Provider value={[mode, setMode]}>\r\n      {props.children}\r\n    </ModeContext.Provider>\r\n  );\r\n};\r\n","import { useState, createContext } from \"react\";\r\n\r\nexport const CountriesContext = createContext();\r\n\r\nexport const CountriesProvider = (props) => {\r\n  const [countries, setCountries] = useState([]);\r\n  return (\r\n    <CountriesContext.Provider value={{countries, setCountries}}>\r\n      {props.children}\r\n    </CountriesContext.Provider>\r\n  );\r\n};\r\n","export const capitalize = (word) => {\r\n  const arr = word.split(\" \");\r\n  return arr\r\n    .map((w) => w.charAt(0).toUpperCase().concat(w.substring(1)))\r\n    .toString()\r\n    .replace(/,/g, \" \");\r\n};\r\n\r\nexport const addCommas = (arr) => {\r\n  return arr.map((e, index) => {\r\n    if (arr.length > 1) {\r\n      return <span key={index}>{`${e.name}, `}</span>;\r\n    }\r\n    return <span key={index}>{`${e.name}`}</span>;;\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/moon.054f2092.svg\";","import { useContext } from \"react\";\r\nimport { ModeContext } from \"../context/context-mode\";\r\nimport { capitalize } from \"../utils\";\r\nimport moon from \"../images/moon.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  flex-grow: 1;\r\n  max-width: 85%;\r\n`;\r\n\r\nconst MoonDiv = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport default function Header() {\r\n  const [mode, setMode] = useContext(ModeContext);\r\n\r\n  const handleClick = () => {\r\n    setMode({ color: mode.color === \"ligth\" ? \"dark\" : \"ligth\" });\r\n  };\r\n\r\n  return (\r\n    <HeaderWrapper className=\"shadow\">\r\n      <TitleWrapper>\r\n        <h1>Where in the world?</h1>\r\n      </TitleWrapper>\r\n      <MoonDiv onClick={handleClick}>\r\n        <ion-icon name=\"moon-outline\"></ion-icon>\r\n      </MoonDiv>\r\n      <span>{capitalize(mode.color)} Mode</span>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardWrapper = styled.div`\r\n  max-width: 250px;\r\n  margin-bottom: 85px;\r\n  transition: all .2s ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst BannerWrapper = styled.div`\r\n  max-width: 250px;\r\n  height: 150px;\r\n`;\r\n\r\nconst Banner = styled.img`\r\n  position: static;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: ${(props) =>\r\n    props.theme.color === \"dark\" ? \"#2B3743\" : \"#FFFFFF\"};\r\n  max-width: 250px;\r\n  padding: 15px;\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nconst Bold = styled.span`\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CardTitle = styled.span`\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst InfoDiv = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default function CountryCard({ country }) {\r\n  const { flag, name, population, region, capital } = country;\r\n\r\n  return (\r\n    <CardWrapper className=\"shadow\">\r\n      <BannerWrapper>\r\n        <Link to={{\r\n          pathname: `/country/${name}`,\r\n          state: {\r\n            country\r\n          } \r\n        }}>\r\n          <Banner src={flag} alt=\"banner\" className=\"shadow\"></Banner>\r\n        </Link>\r\n      </BannerWrapper>\r\n      <CardBody>\r\n        <CardTitle>{name}</CardTitle>\r\n        <InfoDiv>\r\n          <Bold>Population:</Bold>\r\n          <span>{new Intl.NumberFormat().format(population)}</span>\r\n        </InfoDiv>\r\n        <InfoDiv>\r\n          <Bold>Region:</Bold>\r\n          <span>{region}</span>\r\n        </InfoDiv>\r\n        <InfoDiv>\r\n          <Bold>Capital:</Bold>\r\n          <span>{capital}</span>\r\n        </InfoDiv>\r\n      </CardBody>\r\n    </CardWrapper>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { CountriesContext } from \"../context/context-countries\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media screen and (max-width: 750px) {\r\n    padding: 40px;\r\n  }\r\n  @media screen and (max-width: 581px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst hasFiltered = (countries, byRegion, byName) => {\r\n  const filterRegion = byRegion\r\n    ? countries.filter((c) => c.region === byRegion)\r\n    : countries;\r\n  return byName\r\n    ? filterRegion.filter((c) =>\r\n        c.name.toLowerCase().includes(byName.toLowerCase())\r\n      )\r\n    : filterRegion;\r\n};\r\n\r\nconst Countries = React.memo(({ byRegion, byName }) => {\r\n  const {countries}= useContext(CountriesContext);\r\n  const filtered =\r\n    byRegion || byName ? hasFiltered(countries, byRegion, byName) : countries;\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {filtered.map((c, index) => (\r\n          <CountryCard key={index} country={c}></CountryCard>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport Countries from \"./Countries\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 45px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  padding: 20px 60px 20px 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  @media (max-width: 750px) {\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    align-items: start;\r\n  }\r\n`;\r\n\r\nconst CountryDiv = styled.div`\r\n  flex-grow: 1;\r\n  max-width: 80%;\r\n\r\n  @media (max-width: 750px) {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst InputCountry = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  padding-left: 40px;\r\n\r\n  @media (max-width: 750px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  max-width: 250px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  outline: none;\r\n`;\r\n\r\nconst initialValue = {\r\n  byName: \"\",\r\n  byRegion: \"\",\r\n};\r\n\r\nconst MainView = React.memo(() => {\r\n  const [filters, setFilters] = useState(initialValue);\r\n\r\n  const handleChange = (e) => {\r\n    setFilters({ ...filters, byName: e.target.value });\r\n  };\r\n\r\n  const handleSelect = (e) => {\r\n    setFilters({ ...filters, byRegion: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <InputWrapper>\r\n        <ion-icon name=\"search-outline\" class=\"search\"></ion-icon>\r\n        <CountryDiv>\r\n          <InputCountry\r\n            className=\"shadow\"\r\n            type=\"text\"\r\n            placeholder=\"Search for country...\"\r\n            name=\"search-country\"\r\n            onChange={handleChange}\r\n          ></InputCountry>\r\n        </CountryDiv>\r\n        <Select\r\n          name=\"select-continent\"\r\n          className=\"shadow\"\r\n          onChange={handleSelect}\r\n        >\r\n          <option disabled value=\"none\">\r\n            Filter by region\r\n          </option>\r\n          <option value=\"Africa\">Africa</option>\r\n          <option value=\"Americas\">Americas</option>\r\n          <option value=\"Asia\">Asia</option>\r\n          <option value=\"Europe\">Europe</option>\r\n          <option value=\"Oceania\">Oceania</option>\r\n        </Select>\r\n      </InputWrapper>\r\n      <Countries\r\n        url=\"https://restcountries.eu/rest/v2/all\"\r\n        byRegion={filters.byRegion}\r\n        byName={filters.byName}\r\n      />\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default MainView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, Redirect } from \"react-router-dom\";\r\nimport { addCommas } from \"../utils\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 77%;\r\n  padding: 60px;\r\n  @media screen and (max-width: 750px) {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  position: relative;\r\n  width: 150px;\r\n  border-radius: 10px;\r\n  background-color: ${(props) =>\r\n    props.theme.color === \"dark\" ? \"#2B3743\" : \"#FFFFFF\"};\r\n  color: ${(props) => (props.theme.color === \"dark\" ? \"#E7EDF0\" : \"#1C1D1F\")};\r\n  padding: 15px;\r\n  outline: none;\r\n  border: none;\r\n  text-decoration: none;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst BannerWrapper = styled.div`\r\n  max-width: 450px;\r\n  max-height: 350px;\r\n`;\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  @media screen and (max-width: 1080px) {\r\n    width: 100%;\r\n    max-width: 450px;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst InfoRight = styled.div`\r\n  @media screen and (max-width: 980px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst Bold = styled.span`\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n  padding-inline-start: 0px;\r\n  padding-inline-end: 40px;\r\n`;\r\n\r\nconst BordersWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  @media screen and (max-width: 980px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst BorderButtonsWrapper = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  @media screen and (max-width: 980px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BorderButton = styled(Button)`\r\n  align-items: center;\r\n  width: 88px;\r\n  padding: 3px;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst fetchBorder = async (b) => {\r\n  const url = \"https://restcountries.eu/rest/v2/alpha/\";\r\n  const data = await fetch(url + b);\r\n  const json = await data.json();\r\n  return json;\r\n};\r\n\r\nconst initialState = [];\r\n\r\nexport default function CountryPage() {\r\n  const { state } = useLocation();\r\n  const [countries, setCountries] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      const parsedBorders = state.country.borders.filter(\r\n        (b, index) => b && index < 3\r\n      );\r\n      Promise.all(parsedBorders.map((b) => fetchBorder(b))).then((r) =>\r\n        setCountries(r)\r\n      );\r\n    }\r\n  }, [state]);\r\n\r\n  if (!state) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  }\r\n\r\n  const {\r\n    country: {\r\n      flag,\r\n      name,\r\n      nativeName,\r\n      subRegion,\r\n      topLevelDomain,\r\n      currencies,\r\n      languages,\r\n      population,\r\n      region,\r\n      capital,\r\n    } = {},\r\n  } = state;\r\n\r\n  const parsedCurrencies = addCommas(currencies);\r\n  const parsedLanguages = addCommas(languages);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Link to=\"/\">\r\n          <Button className=\"shadow\">\r\n            <div>\r\n              <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n            </div>\r\n            <div>\r\n              <span>Back</span>\r\n            </div>\r\n          </Button>\r\n        </Link>\r\n        <DescriptionWrapper>\r\n          <BannerWrapper>\r\n            <Flag src={flag} alt=\"flag\"></Flag>\r\n          </BannerWrapper>\r\n          <div>\r\n            <h2>{name}</h2>\r\n            <InfoWrapper>\r\n              <div>\r\n                <List>\r\n                  <li>\r\n                    {\" \"}\r\n                    <Bold>Native name: </Bold>\r\n                    <span>{nativeName}</span>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <Bold>Population: </Bold>\r\n                    <span>{population}</span>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <Bold>Region: </Bold>\r\n                    <span>{region}</span>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <Bold>Sub Region: </Bold>\r\n                    <span>{subRegion}</span>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <Bold>Capital: </Bold>\r\n                    <span>{capital}</span>\r\n                  </li>\r\n                </List>\r\n              </div>\r\n              <InfoRight>\r\n                <List>\r\n                  <li>\r\n                    <Bold>Top Level Domain: </Bold>\r\n                    <span>{topLevelDomain}</span>\r\n                  </li>\r\n                  <li>\r\n                    <Bold>Currencies: </Bold>\r\n                    {parsedCurrencies}\r\n                  </li>\r\n                  <li>\r\n                    <Bold>Languages: </Bold>\r\n                    {parsedLanguages}\r\n                  </li>\r\n                  <li></li>\r\n                </List>\r\n              </InfoRight>\r\n            </InfoWrapper>\r\n            <BordersWrapper>\r\n              <div>\r\n                <Bold>Border Countries: </Bold>\r\n              </div>\r\n              <BorderButtonsWrapper>\r\n                {countries.map((country, index) => (\r\n                  <Link  key={index}\r\n                    to={{\r\n                      pathname: `/country/${country.name}`,\r\n                      state: {\r\n                        country,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <BorderButton className=\"shadow\">\r\n                      {country.name}\r\n                    </BorderButton>\r\n                  </Link>\r\n                ))}\r\n              </BorderButtonsWrapper>\r\n            </BordersWrapper>\r\n          </div>\r\n        </DescriptionWrapper>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import { useContext, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ModeContext } from \"./context/context-mode\";\nimport { CountriesContext } from \"./context/context-countries\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport Header from \"./components/Header\";\nimport MainView from \"./components/MainView\";\nimport CountryPage from \"./components/CountryPage\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  body {\n    transition: 0.2s;\n    line-height: 1.8;\n    margin: 0;\n    padding: 0;\n    background-color: ${(props) =>\n      props.theme.color === \"dark\" ? \"#202D36\" : \"#FAFAFA\"};\n    color: ${(props) => (props.theme.color === \"dark\" ? \"#E7EDF0\" : \"#1C1D1F\")};\n    font-family: 'Nunito Sans', sans-serif;\n  }\n\n  header {\n    background-color: ${(props) =>\n      props.theme.color === \"dark\" ? \"#2B3743\" : \"#FFFFFF\"};\n  }\n\n  h1 {\n    font-size: 18px;\n  }\n\n  input {\n    background-color: ${(props) =>\n      props.theme.color === \"dark\" ? \"#2B3743\" : \"#FFFFFF\"};\n    color: ${(props) => (props.theme.color === \"dark\" ? \"#E7EDF0\" : \"#1C1D1F\")};\n    border: none;\n    outline: none;\n    border-radius: 10px;\n    \n  }\n\n  select {\n    background-color: ${(props) =>\n      props.theme.color === \"dark\" ? \"#2B3743\" : \"#FFFFFF\"};\n    color: ${(props) => (props.theme.color === \"dark\" ? \"#E7EDF0\" : \"#1C1D1F\")};\n    border: none;\n    outline: none;\n    border-radius: 10px;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ion-icon {\n    color: ${(props) => (props.theme.color === \"dark\" ? \"#E7EDF0\" : \"#1C1D1F\")};\n  }\n\n  .search {\n    position: absolute;\n    text-align: left;\n    top: 40%;\n    left: 75px;\n    @media screen and (max-width: 750px) {\n      top: 19%;\n      left: 20px;\n    }\n  }\n\n  .shadow {\n    -webkit-box-shadow: 1px -1px 12px -1px rgba(0, 0, 0, 0.1);\n    box-shadow: 1px -1px 12px -1px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nfunction App() {\n  const [mode] = useContext(ModeContext);\n  const {setCountries} = useContext(CountriesContext);\n  const url = \"https://restcountries.eu/rest/v2/all\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n      const json = await response.json();\n      setCountries(json);\n    };\n    fetchData();\n  }, [setCountries]);\n\n  return (\n    <>\n      <Router>\n        <ThemeProvider theme={mode}>\n          <GlobalStyle />\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={MainView} />\n            <Route path=\"/country/:name\" component={CountryPage} />\n          </Switch>\n        </ThemeProvider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ModeContextProvider } from \"./context/context-mode\";\nimport { CountriesProvider } from \"./context/context-countries\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <ModeContextProvider>\n      <CountriesProvider>\n        <App />\n      </CountriesProvider>\n    </ModeContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}